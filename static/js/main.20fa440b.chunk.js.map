{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","TodoForm","addTodo","useState","setTitle","setUserId","hasErrorTitle","setHasErrorTitle","hasErrorUserId","setHasErrorUserId","action","method","onSubmit","e","preventDefault","trim","htmlFor","type","value","placeholder","onChange","target","disabled","App","updateTodos","setUpdateTodos","newTodo","Math","max","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20fa440b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todo: Todos,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={todo.completed ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todos: Todos[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))\n    }\n  </section>\n);\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  addTodo: (todo: Todos) => void,\n};\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const TodoForm: React.FC<Props> = ({ addTodo }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [hasErrorTitle, setHasErrorTitle] = useState('');\n  const [hasErrorUserId, setHasErrorUserId] = useState('');\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasErrorTitle('');\n  };\n\n  const handleUserId = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(e.target.value);\n    setHasErrorUserId('');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!title.trim()) {\n      setHasErrorTitle('Please enter a title');\n    }\n\n    if (!userId) {\n      setHasErrorUserId('Please choose a user');\n    }\n\n    if (title.trim() && userId) {\n      addTodo({\n        user: getUserById(+userId),\n        id: 0,\n        title,\n        completed: false,\n        userId: (+userId),\n      });\n\n      setTitle('');\n      setUserId('');\n      setHasErrorTitle('');\n      setHasErrorUserId('');\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todoTitle\">Title: </label>\n\n        <input\n          name=\"title\"\n          id=\"todoTitle\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitle}\n        />\n        {\n          hasErrorTitle && (\n            <span className=\"error\">{hasErrorTitle}</span>\n          )\n        }\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"idUSer\">User: </label>\n\n        <select\n          name=\"id_user\"\n          id=\"idUser\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserId}\n        >\n          <option value=\"\" disabled>Choose a user</option>\n          {\n            usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))\n          }\n        </select>\n\n        {\n          hasErrorUserId && (\n            <span className=\"error\">{hasErrorUserId}</span>\n          )\n        }\n\n        {\n          userId && hasErrorUserId && (\n            setHasErrorUserId('')\n          )\n        }\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { User } from './types/User';\nimport { Todos } from './types/Todos';\n\nfunction getNewTodoId(todos: Todos[]) {\n  const maxId = Math.max(...todos.map((todo) => todo.id));\n\n  return maxId + 1;\n}\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const todos: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [updateTodos, setUpdateTodos] = useState<Todos[]>(todos);\n\n  const addNewTodo = (todo: Todos) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(updateTodos),\n    };\n\n    setUpdateTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm addTodo={addNewTodo} />\n\n      <TodoList todos={updateTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}